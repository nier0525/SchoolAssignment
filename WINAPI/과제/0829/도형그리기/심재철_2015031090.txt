#include <windows.h>

LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM); //CALLBACK 매크로
HINSTANCE g_hInst;  //인스턴스 핸들
LPCTSTR lpszClass = TEXT("심재철_2015031090"); //제목 표시줄에 표시되는 내용

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdParam, int nCmdShow)  //main 함수
{
	HWND hWnd; //윈도우 핸들 선언
	MSG Message;  //메세지 구조체 변수 선언
	WNDCLASS WndClass;  //Windows Class 구조체 변수 선언
	g_hInst = hInstance;  //hInstance값을 외부에서도 사용할 수 있도록 전역변수에 값을 저장

	WndClass.cbClsExtra = 0;  //예약 영역. 지금은 사용X
	WndClass.cbWndExtra = 0;  //예약 영역
	WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);  //윈도우의 배경색상을 지정
	WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);  //윈도우의 커서 모양을 지정
	WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);  //윈도우의 커서 아이콘 모양 지정
	WndClass.hInstance = hInstance;  //윈도우 클래스를 등록하는 프로그램 번호
	WndClass.lpfnWndProc = WndProc;  //윈도우 메세지 처리 함수 지정
	WndClass.lpszClassName = lpszClass;  //윈도우 클래스의 이름 지정
	WndClass.lpszMenuName = NULL;  //이 프로그램의 메뉴 지정
	WndClass.style = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;  //윈도우의 스타일을 정의

	RegisterClass(&WndClass);  //WNDCLASS 구조체의 번지를 전달



	//윈도우를 생성하고 창에 표시하는 기능을 수행
	hWnd = CreateWindow(lpszClass, lpszClass, WS_OVERLAPPEDWINDOW, /*CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT*/ 100, 100, 700, 700, NULL, (HMENU)NULL, hInstance, NULL);

	ShowWindow(hWnd, nCmdShow);

	//메세지 루프를 실행
	while (GetMessage(&Message, NULL, 0, 0))  //Queue에 있는 메세지를 읽어들인다
	{
		TranslateMessage(&Message);  //키보드 입력 메세지를 가공하여 프로그램에서 쉽게 사용할 수 있도록

		DispatchMessage(&Message);  //메세지를 윈도우의 메세지 처리 함수 WndProc로 전달
	}
	return (int)Message.wParam;   //탈출 코드, 프로그램 종료
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)
{
	HDC hdc;
	PAINTSTRUCT ps;
	static int x, xx;
	static int y, yy;
	static BOOL bNowDraw = FALSE;
	static int line = 0;

	switch (iMessage)
	{
	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;

	case WM_PAINT:  // 고정적으로 표기되는 글자
		hdc = BeginPaint(hWnd, &ps);
		TextOut(hdc, 60, 100, TEXT("이름 : 심재철"), 13);
		TextOut(hdc, 60, 150, TEXT("a : 직선"), 8);
		TextOut(hdc, 60, 200, TEXT("b : 원"), 6);
		TextOut(hdc, 60, 250, TEXT("c : 네모"), 8);
		TextOut(hdc, 60, 300, TEXT("d : 자유선"), 10);
		TextOut(hdc, 60, 350, TEXT("e : 메세지박스"), 14);
		TextOut(hdc, 60, 400, TEXT("f : 종료"), 8);
		EndPaint(hWnd, &ps);
		return 0;

	case WM_CHAR:
		switch (wParam)
		{
		case 'a': // 키보드 a 버튼 누를 시
			line = 1; // 변수 line 의 정수가 1이 된다
			return 0;
		case 'b': // 키보드 b 버튼 누를 시
			line = 2; // 변수 line 의 정수가 2이 된다
			return 0;
		case 'c': // 키보드 c 버튼 누를 시
			line = 3; // 변수 line 의 정수가 3이 된다
			return 0;
		case 'd': // 키보드 d 버튼 누를 시
			line = 4; // 변수 line 의 정수가 4이 된다
			return 0;
		case 'e': // 키보드 e 버튼 누를 시
			MessageBox(hWnd, "심재철", "이름", MB_OK); // 메세지 박스 함수
			return 0;
		case 'f': // 키보드 f 버튼 누를 시
			PostQuitMessage(0); // 프로그램 종료 함수
			return 0;
		}
		return 0;

	case WM_LBUTTONDOWN: // 왼쪽 버튼을 누를 경우
		if (line == 1) 
		{
			InvalidateRect(hWnd, NULL, TRUE); // 화면 초기화
			x = LOWORD(lParam);
			y = HIWORD(lParam);
			bNowDraw = TRUE;
		}
		if (line == 2)
		{
			InvalidateRect(hWnd, NULL, TRUE);
			x = LOWORD(lParam);
			y = HIWORD(lParam);
			bNowDraw = TRUE;
			return 0;
		}
		if (line == 3)
		{
			InvalidateRect(hWnd, NULL, TRUE);
			x = LOWORD(lParam);
			y = HIWORD(lParam);
			bNowDraw = TRUE;
			return 0;
		}
		if (line == 4)
		{
			InvalidateRect(hWnd, NULL, TRUE);
			x = LOWORD(lParam);
			y = HIWORD(lParam);
			bNowDraw = TRUE;
		}  // line 변수의 정수 1~4까지 적용된다.
		return 0;

	case WM_MOUSEMOVE: // 마우스가 움직일 때
		if (line == 4) // 변수 line 의 정수가 4일 경우 적용된다.
		{
			if (bNowDraw == TRUE)
			{
				hdc = GetDC(hWnd);
				MoveToEx(hdc, x, y, NULL);
				x = LOWORD(lParam);
				y = HIWORD(lParam);
				LineTo(hdc, x, y);
				ReleaseDC(hWnd, hdc); // 자유형 선이 그려진다.
			}
		}
		return 0;

	case WM_LBUTTONUP:
		if (line == 1) // 변수 line의 정수가 1일 경우
		{
			hdc = GetDC(hWnd);
			MoveToEx(hdc, x, y, NULL);
			x = LOWORD(lParam);
			y = HIWORD(lParam);
			LineTo(hdc, x, y); // 선이 그려진다.
			bNowDraw = FALSE;
		}
		if (line == 2) // 변수 line의 정수가 2일 경우
		{
			hdc = GetDC(hWnd);
			xx = LOWORD(lParam);
			yy = HIWORD(lParam);
			Ellipse(hdc, x, y, xx, yy); // 원이 그려진다.
			bNowDraw = FALSE;
		}
		if (line == 3) // 변수 line의 정수가 3일 경우
		{
			hdc = GetDC(hWnd);
			xx = LOWORD(lParam);
			yy = HIWORD(lParam);
			Rectangle(hdc, x, y, xx, yy); // 사각형이 그려진다.
			bNowDraw = FALSE;
		}
		if (line == 4) // 변수 line의 정수가 4일 경우
		{
			hdc = GetDC(hWnd);
			MoveToEx(hdc, x, y, NULL);
			x = LOWORD(lParam);
			y = HIWORD(lParam);
			LineTo(hdc, x, y); // 선이 그려진다.
			bNowDraw = FALSE;
		}
		return 0;

	}
	return(DefWindowProc(hWnd, iMessage, wParam, lParam));
}