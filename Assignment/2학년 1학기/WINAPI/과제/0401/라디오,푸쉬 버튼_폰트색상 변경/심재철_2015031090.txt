#include <windows.h>

LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);
HINSTANCE g_hInst;
HWND hWndMain;
LPCTSTR lpszClass = TEXT("Ω…¿Á√∂_2015031090");

int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance
	, LPSTR lpszCmdParam, int nCmdShow)
{
	HWND hWnd;
	MSG Message;
	WNDCLASS WndClass;
	g_hInst = hInstance;

	WndClass.cbClsExtra = 0;
	WndClass.cbWndExtra = 0;
	WndClass.hbrBackground = (HBRUSH)(COLOR_BTNFACE + 1);
	WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
	WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	WndClass.hInstance = hInstance;
	WndClass.lpfnWndProc = WndProc;
	WndClass.lpszClassName = lpszClass;
	WndClass.lpszMenuName = NULL;
	WndClass.style = CS_HREDRAW | CS_VREDRAW;
	RegisterClass(&WndClass);

	hWnd = CreateWindow(lpszClass, lpszClass, WS_OVERLAPPEDWINDOW,
		CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
		NULL, (HMENU)NULL, hInstance, NULL);
	ShowWindow(hWnd, nCmdShow);

	while (GetMessage(&Message, NULL, 0, 0)) {
		TranslateMessage(&Message);
		DispatchMessage(&Message);
	}
	return (int)Message.wParam;
}

enum { ID_R1 = 101, ID_R2, ID_R3, ID_R4, ID_R5, ID_R6 };
HWND r1, r2, r3, r4, r5, r6;
int Graph = 0;

COLORREF Color = RGB(0, 0, 0);
COLORREF BK = RGB(0, 0, 0);

LRESULT CALLBACK WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)
{
	HDC hdc;
	PAINTSTRUCT ps;
	HFONT myfont, oldfont;

	TCHAR str[] = TEXT("Hello");

	static BOOL trans = true;
	static int text = 0;

	switch (iMessage) {

	case WM_CREATE:

		CreateWindow(TEXT("button"), TEXT("TEXT"), WS_CHILD | WS_VISIBLE |
			BS_PUSHBUTTON, 280, 50, 100, 25, hWnd, (HMENU)0, g_hInst, NULL);

		CreateWindow(TEXT("button"), TEXT("TextColor"), WS_CHILD | WS_VISIBLE |
			BS_GROUPBOX, 5, 5, 120, 110, hWnd, (HMENU)0, g_hInst, NULL);
		CreateWindow(TEXT("button"), TEXT("BKColor"), WS_CHILD | WS_VISIBLE |
			BS_GROUPBOX, 145, 5, 120, 110, hWnd, (HMENU)1, g_hInst, NULL);

		r1 = CreateWindow(TEXT("button"), TEXT("Red"), WS_CHILD | WS_VISIBLE |
			BS_AUTORADIOBUTTON | WS_GROUP,
			10, 20, 100, 30, hWnd, (HMENU)ID_R1, g_hInst, NULL);

		r2 = CreateWindow(TEXT("button"), TEXT("Blue"), WS_CHILD | WS_VISIBLE |
			BS_AUTORADIOBUTTON,
			10, 50, 100, 30, hWnd, (HMENU)ID_R2, g_hInst, NULL);

		r3 = CreateWindow(TEXT("button"), TEXT("Green"), WS_CHILD | WS_VISIBLE |
			BS_AUTORADIOBUTTON,
			10, 80, 100, 30, hWnd, (HMENU)ID_R3, g_hInst, NULL);

		r4 = CreateWindow(TEXT("button"), TEXT("Black"), WS_CHILD | WS_VISIBLE |
			BS_AUTORADIOBUTTON | WS_GROUP,
			150, 20, 100, 30, hWnd, (HMENU)ID_R4, g_hInst, NULL);

		r5 = CreateWindow(TEXT("button"), TEXT("Yellow"), WS_CHILD | WS_VISIBLE |
			BS_AUTORADIOBUTTON,
			150, 50, 100, 30, hWnd, (HMENU)ID_R5, g_hInst, NULL);

		r6 = CreateWindow(TEXT("button"), TEXT("TRANSPARENT"), WS_CHILD | WS_VISIBLE |
			BS_AUTORADIOBUTTON,
			150, 80, 100, 30, hWnd, (HMENU)ID_R6, g_hInst, NULL);

		/*CheckRadioButton(hWnd, ID_R1, ID_R3, ID_R1);
		CheckRadioButton(hWnd, ID_R4, ID_R6, ID_R4);*/

		break;

	case WM_COMMAND:
		switch (LOWORD(wParam)) {
		case 0:
			text += 1;
			break;

		case ID_R1:
			Color = RGB(255, 0, 0);
			break;

		case ID_R2:
			Color = RGB(0, 0, 255);
			break;

		case ID_R3:
			Color = RGB(0, 255, 0);
			break;

		case ID_R4:
			BK = RGB(0, 0, 0);
			trans = false;
			break;

		case ID_R5:
			BK = RGB(255, 255, 0);
			trans = false;
			break;

		case ID_R6:
			trans = true;
			break;

		}
		InvalidateRect(hWnd, NULL, TRUE);
		return 0;
	case WM_PAINT:
		hdc = BeginPaint(hWnd, &ps);
		
		myfont = CreateFont(30, 0, 0, 0, 0, 0, 0, 0, HANGEUL_CHARSET, 0, 0, 0,
			VARIABLE_PITCH | FF_ROMAN, TEXT("±√º≠"));
		oldfont = (HFONT)SelectObject(hdc, myfont);

		SetTextColor(hdc, Color);
		SetBkColor(hdc, BK);

		if (trans) {
			SetBkMode(hdc, TRANSPARENT);
		}

		if (text % 2) {
			TextOut(hdc, 250, 250, str, strlen(str));
		}

		SelectObject(hdc, oldfont);
		DeleteObject(myfont);
		EndPaint(hWnd, &ps);
		return 0;
	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	}
	return(DefWindowProc(hWnd, iMessage, wParam, lParam));
}